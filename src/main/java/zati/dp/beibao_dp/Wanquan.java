package zati.dp.beibao_dp;


/**
 * 有 N 种物品和一个容量为 V 的背包，每种物品都有无限件可用。放入第 i 种物品
 * 的费用是 Ci，价值是 Wi。求解：将哪些物品装入背包，可使这些物品的耗费的费用总
 * 和不超过背包容量，且价值总和最大。
 * <p>
 * <p>
 * <p>
 * <p>
 * 有 N 种物品和一个容量是 V 的背包，每种物品都有无限件可用。
 * <p>
 * 第 i 种物品的体积是 vi，价值是 wi。
 * <p>
 * 求解将哪些物品装入背包，可使这些物品的总体积不超过背包容量，且总价值最大。
 * 输出最大价值。
 * <p>
 * 输入格式
 * 第一行两个整数，N，V，用空格隔开，分别表示物品种数和背包容积。
 * <p>
 * 接下来有 N 行，每行两个整数 vi,wi，用空格隔开，分别表示第 i 种物品的体积和价值。
 * <p>
 * <p>
 * 输入格式
 * 第一行两个整数，N，V，用空格隔开，分别表示物品种数和背包容积。
 * <p>
 * 接下来有 N 行，每行两个整数 vi,wi，用空格隔开，分别表示第 i 种物品的体积和价值。
 * <p>
 * 输出格式
 * 输出一个整数，表示最大价值。
 * <p>
 * 数据范围
 * 0<N,V≤1000
 * 0<vi,wi≤1000
 * 输入样例
 * 4 5
 * 1 2
 * 2 4
 * 3 4
 * 4 5
 * 输出样例：
 * 10
 */

public class Wanquan {


    static int[][] dp = new int[1005][1005];

    static int[] weight = new int[1005];

    static int[] value = new int[1005];

    public static void main(String[] args) {
        int n = 4, v = 5;
        weight[1]=1;
        weight[2]=2;
        weight[3]=3;
        weight[4]=4;
        System.out.println(5%5);



    }


}
